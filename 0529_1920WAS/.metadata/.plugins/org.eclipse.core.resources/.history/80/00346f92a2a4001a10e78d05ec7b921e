package com.gunzip.mandooweb;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.net.ssl.HttpsURLConnection;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gunzip.admin.AdminDTO;
import com.gunzip.admin.AdminService;
import com.gunzip.fcm.FCMController;
import com.gunzip.fcm.FCMDTO;
import com.gunzip.fcm.MessageDTO;
import com.gunzip.fcm.SendDataDTO;
import com.gunzip.mongodb.mongoLogMethod;
import com.gunzip.mongodb.mongoService;

@Controller
public class HomeController {
	@Autowired
	AdminService service;
	@Autowired
	mongoService mongoservice;
	
	//FCMController fcm = new FCMController();
	
	@RequestMapping(value = "/home.do", method = RequestMethod.GET)
	public String adminLogin() {
		return "login";
	}
	
	@RequestMapping(value = "/index.do", method = RequestMethod.POST)
	public String indexPOST(AdminDTO dto, HttpServletRequest req) {
		//System.out.println(req);
		//System.out.println(dto.getid()+","+dto.getPassword());
		//System.out.println(service.toString());
		AdminDTO result = service.login(dto);
		if(result==null) {
			return "login";
		}else {
			mongoLogMethod lmethod = new mongoLogMethod(mongoservice, dto);
			lmethod.insertAdminLoginLog();
			return "redirect:index.do";
		}
	}
	
	@RequestMapping(value = "/index.do", method = RequestMethod.GET)
	public String index() {
		return "index";
	}
	
	@RequestMapping(value = "/index2.do", method = RequestMethod.GET)
	public String index2() {
		return "index2";
	}
	
	// TODO: 현정 ============================================================

	
		@RequestMapping(value="/web/score.do",
				method=RequestMethod.GET,
				produces="application/json;charset=utf-8")
		public @ResponseBody String dangerScore(String beforePoint0, String beforePoint1, String point0, String point1) {
			String score = ApiExplorer.readJson(beforePoint0, beforePoint1, point0, point1);
			
			Pattern p = Pattern.compile("anals_value.*}]}");
			Matcher m = p.matcher(score);
			
			String data = null;
			if (m.find()) {
				data = m.group(); //패턴과 일치하는 단어
				//System.out.println(data);
			}
			String[] result = data.split(",");
			for (int i = 0; i < result.length; i++) {
				// 앞에서 :"부분까지 지우기, 뒤에 "부터 지우기
				int idx = result[i].indexOf(":");
				result[i] = result[i].substring(idx).replaceAll(":|\"|}|]", "");
				//System.out.println(result[i]);
			}
			
			String value = result[0]; 
			String grd = result[1];
			
			System.out.println("위험도지수: "+value+" / "+grd);
			// FCM 메시지 전송
			if(Integer.parseInt(grd) >= 3) {
				System.out.println("위험하다~~");
				 fcm.sendMessage("car"); // id 임의로 car 넣음
			}
			return value+","+grd;
		}
		
		
		
		@RequestMapping(value = "/speed.do", method = RequestMethod.GET)
		public String speed() {
			return "speed";
		}
		
		@RequestMapping(value = "/map.do", method = RequestMethod.GET)
		public String map() {
			return "map";
		}

		
		@RequestMapping(value = "/map_test.do", method = RequestMethod.GET)
		public String map_test() {
			return "map_test";
		}
		
		// 칠곡물류IC - 왜관IC (구글 지도 좌표) 15포인트
		@RequestMapping(value = "/map_test2.do", method = RequestMethod.GET)
		public String map_test2() {
			return "map_test2";
		}
}